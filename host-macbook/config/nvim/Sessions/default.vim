" ~/.dotfiles/host-netbook/config/nvim/Sessions/default.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 23 July 2021 at 00:52:20.
" Open this file in Vim and run :source % to restore your session.

if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'apprentice' | colorscheme apprentice | endif
call setqflist([])
let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Source/bash-scripts
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +18 timer.sh
badd +18 speak.sh
badd +1 2
badd +45 include.sh
badd +15 logging.sh
badd +28 debug.sh
badd +77 docstring.sh
badd +2 extract-refs.sh
badd +21 format-string.sh
badd +68 bibtex-generator.sh
badd +26 utils/du-by-filetype.sh
badd +32 utils/IO/beeper.sh
badd +21 utils/IO/notify.sh
badd +1 utils/IO/pitch.sh
badd +1 utils/IO/pitch.tsv
badd +4 utils/IO/castle.tsv
badd +1 utils/IO/castle.txt
badd +105 utils/IO/music-parser.sh
badd +44 include/include.sh
badd +1 utils/IO/bach.txt
badd +1 utils/IO/x-files.txt
badd +1 utils/IO/jurassic-park.txt
badd +0 utils/IO/mozart-40.txt
argglobal
%argdel
set stal=2
edit utils/IO/music-parser.sh
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 94 + 84) / 169)
exe 'vert 2resize ' . ((&columns * 74 + 84) / 169)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 41 - ((23 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
41
normal! 027|
lcd ~/Source/bash-scripts
wincmd w
argglobal
if bufexists("~/Source/bash-scripts/utils/IO/mozart-40.txt") | buffer ~/Source/bash-scripts/utils/IO/mozart-40.txt | else | edit ~/Source/bash-scripts/utils/IO/mozart-40.txt | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0337|
lcd ~/Source/bash-scripts
wincmd w
exe 'vert 1resize ' . ((&columns * 94 + 84) / 169)
exe 'vert 2resize ' . ((&columns * 74 + 84) / 169)
tabedit ~/Source/bash-scripts/timer.sh
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 192 - ((33 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
192
normal! 0
lcd ~/Source/bash-scripts
tabnext 1
set stal=1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFAcI
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
