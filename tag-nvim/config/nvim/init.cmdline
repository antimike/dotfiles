" vim: syntax=vim
" vim: filetype=vim


let cmdline_follow_colorscheme = 1
let cmdline_in_buffer = 1
let cmdline_vsplit = 1
"let cmdline_external_term_cmd = 'kitty %s &'

" Maps: 'ex' == 'execute'
let cmdline_map_start          = '<leader>R'
let cmdline_map_send           = '<leader>Rs'
let cmdline_map_send_and_stay  = '<leader>RS'
let cmdline_map_source_fun     = '<leader>Rf'
let cmdline_map_send_paragraph = '<leader>Rp'
let cmdline_map_send_block     = '<leader>Rb'
let cmdline_map_quit           = '<leader>Rq'
let cmdline_app                = {}
let cmdline_app['python']      = 'ipython'
let cmdline_app['sh']          = 'zsh'
let cmdline_app['zsh']         = 'zsh'
let cmdline_app['sage']        = 'sage'
let cmdline_app['sage.python'] = 'sage'
let cmdline_app['octave']      = 'octave'
let cmdline_app['tex']         = 'sage'
let cmdline_app['freefem']     = 'octave'
let cmdline_app['haskell']     = 'ghci-color'
let cmdline_app['markdown']    = 'ipython'

" For neoterm---default terminal positioning
" Default size is half the current window
let g:neoterm_default_mod = 'botright'
nnoremap <Leader>T :Tnew<CR>
nnoremap <Leader>Tk :Tkill<CR>
nnoremap <Leader>Tc :Tclear<CR>
"g:neoterm_automap_keys = '<F4>'
au BufReadPost,BufNewFile,BufEnter *.edp :Tmap cd %:p:h; FreeFem++ %
au BufReadPost,BufNewFile,BufEnter *.m :Tmap cd %:p:h; octave %

" For vim-slime and vim-ipython-cell
let      g:slime_target = 'neovim'
let      g:slime_python_ipython = 1
nnoremap <Leader>P :SlimeSend1 ipython<CR>
nnoremap <Leader>E :IPythonCellRun<CR>
nnoremap <Leader>Eb :IPythonCellRunTime<CR>
nnoremap <Leader>e :IPythonCellExecuteCell<CR>
nnoremap <Leader>en :IPythonCellExecuteCellJump<CR>
nnoremap <Leader>ed :IPythonCellClear<CR>
nnoremap <Leader>Ex :IPythonCellClose<CR>
nnoremap <Leader>nc :IPythonCellNextCell<CR>
nnoremap <Leader>pc :IPythonCellNextCell<CR>
nmap     <Leader>el :SlimeLineSend
xmap     <Leader>el :SlimeRegionSend
nnoremap <Leader>Q :IPythonCellRestart<CR>


" For vim-repl
" This plugin doesn't seem to work, and its functionality is replicated by
" vimcmdline anyway
"nnoremap <leader>R :REPLToggle<CR>
"nnoremap <leader>E :REPLSendSession<CR>
"let g:repl_program = {
                        "\ 'python': 'ipython',
                        "\ 'sage': 'sage',
                        "\ 'tex': 'sage',
                        "\ 'octave': 'octave',
                        "\ 'default': 'zsh',
                        "\ 'vim': 'vim -e',
                        "\ 'lua': 'lua'
                        "\ }
"let g:repl_exit_commands = {
                        "\ 'python': 'quit()',
                        "\ 'zsh': 'exit',
                        "\ 'default': 'exit',
                        "\ 'haskell': 'quit'
                        "\ }                        
"let g:repl_predefine_python = {
                        "\ 'numpy': 'import numpy as np',
                        "\ 'matplotlib': 'from matplotlib import pyplot as plt',
                        "\ 'pint': 'from pint import UnitRegistry',
                        "\ 'ureg': 'ureg = UnitRegistry()'
                        "\ }                        
