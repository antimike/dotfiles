global !p
import os, sys
sys.path.append('{}/Utilities'.format(os.environ["$PYTHON_REPO"]))
import snippet_utils as utils

#def close_brace(snip):

	#snip.expand_anon(anon)
endglobal

context "utils.is_math_mode(vim)"
snippet "(\\?)(sin|cos|tan|cot|sec|csc)(h?)(\\?.)" "Trig and hyperbolic functions" wAr
`!p 
string = 'boopy'
closer = utils.braces.get(match.group(4), '')
snip.rv = ("\\" if not match.group(1) and match.group(4) in utils.braces else '') \
	+ match.group(1) + match.group(2) + match.group(3) + match.group(4)
`$1`!p string`
endsnippet

#snippet sin() "Sin---parens" wA
#\sin \left( $1 \right) $0
#endsnippet

#snippet sin[] "Sin---brackets" wA
#\sin \left( $1 \right) $0
#endsnippet

#snippet sin{} "Sin---braces" wA
#\sin \left\{ $1 \right\} $0
#endsnippet

#snippet cos() "cos---parens" wA
#\cos \left( $1 \right) $0
#endsnippet

#snippet cos[] "cos---brackets" wA
#\cos \left( $1 \right) $0
#endsnippet

#snippet cos{} "cos---braces" wA
#\cos \left\{ $1 \right\} $0
#endsnippet

#snippet tan() "tan---parens" wA
#\tan \left( $1 \right) $0
#endsnippet

#snippet tan[] "tan---brackets" wA
#\tan \left( $1 \right) $0
#endsnippet

#snippet tan{} "tan---braces" wA
#\tan \left\{ $1 \right\} $0
#endsnippet

#snippet cot() "cot---parens" wA
#\cot \left( $1 \right) $0
#endsnippet

#snippet cot[] "cot---brackets" wA
#\cot \left( $1 \right) $0
#endsnippet

#snippet cot{} "cot---braces" wA
#\cot \left\{ $1 \right\} $0
#endsnippet

#snippet sec() "sec---parens" wA
#\sec \left( $1 \right) $0
#endsnippet

#snippet sec[] "sec---brackets" wA
#\sec \left( $1 \right) $0
#endsnippet

#snippet sec{} "sec---braces" wA
#\sec \left\{ $1 \right\} $0
#endsnippet

#snippet csc() "csc---parens" wA
#\csc \left( $1 \right) $0
#endsnippet

#snippet csc[] "csc---brackets" wA
#\csc \left( $1 \right) $0
#endsnippet

#snippet csc{} "csc---braces" wA
#\csc \left\{ $1 \right\} $0
#endsnippet
